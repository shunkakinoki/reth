[package]
name = "reth-db"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true
description = "Staged syncing primitives used in reth."

[dependencies]
# reth
reth-primitives.workspace = true
reth-interfaces.workspace = true
reth-codecs = { path = "../codecs" }
reth-libmdbx = { path = "../libmdbx-rs", optional = true, features = ["return-borrowed"] }
reth-metrics.workspace = true
redb = { version = "1.0.5", optional = true }

# codecs
serde = { workspace = true, default-features = false }
postcard = { version = "1.0.2", features = ["alloc"] }
heapless = "0.7.16"
parity-scale-codec = { version = "3.2.1", features = ["bytes"] }
futures.workspace = true
tokio-stream.workspace = true
rand.workspace = true
secp256k1 = { workspace = true, default-features = false, features = [
    "alloc",
    "recovery",
    "rand",
], optional = true }
modular-bitfield = "0.11.2"

# misc
bytes.workspace = true
page_size = "0.4.2"
thiserror.workspace = true
tempfile = { version = "3.3.0", optional = true }
parking_lot = "0.12"
derive_more = "0.99"
eyre = "0.6.8"

# arbitrary utils
arbitrary = { workspace = true, features = ["derive"], optional = true }
proptest = { workspace = true, optional = true }
proptest-derive = { version = "0.3", optional = true }

[dev-dependencies]
# reth libs with arbitrary
reth-primitives = { workspace = true, features = ["arbitrary"] }
reth-codecs = { path = "../codecs", features = ["arbitrary"] }
reth-interfaces.workspace = true

tempfile = "3.3.0"
test-fuzz = "4"

pprof = { version = "0.12", features = ["flamegraph", "frame-pointer", "criterion"] }
criterion = "0.5"
iai = "0.1.1"
tokio = { workspace = true, features = ["full"] }
reth-db = { path = ".", features = ["test-utils", "bench"] }

# needed for test-fuzz to work properly, see https://github.com/paradigmxyz/reth/pull/177#discussion_r1021172198
secp256k1.workspace = true

async-trait.workspace = true

arbitrary = { workspace = true, features = ["derive"] }
proptest.workspace = true
proptest-derive = "0.3"

serde_json.workspace = true

paste = "1.0"

assert_matches = "1.5.0"

[build-dependencies]
vergen = { version = "8.0.0", features = ["git", "gitcl"] }

[features]
default = ["redb"]
redb = ["dep:redb"]
mdbx = ["dep:reth-libmdbx"]
test-utils = ["tempfile", "arbitrary"]
arbitrary = [
    "reth-primitives/arbitrary",
    "reth-codecs/arbitrary",
    "dep:arbitrary",
    "dep:proptest",
    "dep:proptest-derive",
]
bench-postcard = ["bench"]
bench = []

[[bench]]
name = "hash_keys"
harness = false

[[bench]]
name = "criterion"
harness = false

[[bench]]
name = "iai"
harness = false
